AWSTemplateFormatVersion: '2010-09-09'
Description: "This templates is to create the private subnet, the route table and security group."

Parameters:
  MyPublicIp:
    Description: | 
      Please enter your public IP (Visit http://checkip.amazonaws.com/).
      You should provide in this format x.x.x.x/32
    Type: String
    ConstraintDescription: Must be /32 CIDR block
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([3][2]))$
    
  VpcId:
    Description: Please enter IP range (CIDR notation) for this VPC
    Type: AWS::EC2::VPC::Id

  DefaultPublicSubnetCidr:
    Description: The CIDR range of the default public subnet
    Type: String
    Default: "172.31.32.0/20"
    ConstraintDescription: Must be within /16 and /28 CIDR block
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([1-2][0-8]))$

  PrivateSubnetCidr:
    Description: The CIDR range to use for creating a private subnet
    Type: String
    Default: "172.31.48.0/20"
    ConstraintDescription: Must be within /16 and /28 CIDR block
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([1-2][0-8]))$

Resources:
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VpcId
      CidrBlock: !Ref PrivateSubnetCidr
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} - Private Subnet"
  
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} - Private Route Table"
  
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet   

  BastionHostSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow traffic from Bastion Hosst"
      SecurityGroupIngress:
        - CidrIp: !Ref DefaultPublicSubnetCidr
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          Description: "Allow traffic from Bastion Host to access via SSH"
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} - Bastion Host Access"          

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH access"
      SecurityGroupIngress:
        - CidrIp: !Ref MyPublicIp
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          Description: "SSH access"
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} - SSH Access"

Outputs:

  SSHSGId:
    Description: "SSH Security Group Id"
    Value: !Ref SSHSecurityGroup
  
  BastionHostSGId:
    Description: "Bastion Host Security Group Id"
    Value: !Ref BastionHostSecurityGroup
  
  PrivateSubnetId:
    Description: "Private Subnet Id"
    Value: !Ref PrivateSubnet

  PrivateRouteTableId:
    Description: "Private Route Table Id"
    Value: !Ref PrivateRouteTable