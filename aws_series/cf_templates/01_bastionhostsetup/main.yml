AWSTemplateFormatVersion: '2010-09-09'
Description: "This templates is to deploy a Bastion Host setup. It consists of 1 public subnet, 1 private subnet, an EC2 instance in each subnet. Security groups are also created"
Mappings:
  InstanceClass:
    "1vCPU-1GB":
      InstanceClassName: "t2.micro"
    "1vCPU-2GB":
      InstanceClassName: "t2.small"
    "2vCPU-2GB":
      InstanceClassName: "t3.small"
Parameters:
  MyPublicIp:
    Description: | 
      Please enter your public IP (Visit http://checkip.amazonaws.com/).
      You should provide in this format x.x.x.x/32
    Type: String
    ConstraintDescription: Must be /32 CIDR block (Remember to append the '/32' behind the IP address)
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([3][2]))$

  VpcId:
    Description: The ID for the target VPC
    Type: AWS::EC2::VPC::Id
    Default: vpc-0c3d1d491c5e3b113

  PublicSubnet:
    Description: Select a subnet ID
    Type: List<AWS::EC2::Subnet::Id>
  
  DefaultPublicSubnetCidr:
    Description: The CIDR range of the selected default public subnet above
    Type: String
    Default: "172.31.32.0/20"
    ConstraintDescription: Must be within /16 and /28 CIDR block
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([1-2][0-8]))$

  PrivateSubnetCidr:
    Description: The CIDR range to use for creating a private subnet
    Type: String
    Default: "172.31.48.0/20"
    ConstraintDescription: Must be within /16 and /28 CIDR block
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([1-2][0-8]))$

  ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

  InstanceClass:
    Description: EC2 instance type
    Type: String
    Default: "1vCPU-1GB"
    AllowedValues:
      - "1vCPU-1GB"
      - "1vCPU-2GB"
      - "2vCPU-2GB"
    ConstraintDescription: "Must be within the specified EC2 instance type"

  KeyName:
    Description: KeyPair for EC2 instance. Please create one if no keypair available.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: "Must be existing EC2 KeyPair"
  
  ComponentTemplateURL:
    Description: S3 ARN URL of the nested stack template for components
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Templates URL"
        Parameters:
          - ComponentTemplateURL
      - Label:
          default: "VPC Configuration"
        Parameters:
          - VpcId
          - PublicSubnet
          - DefaultPublicSubnetCidr
          - PrivateSubnetCidr
      - Label:
          default: "EC2 Configuration"
        Parameters:
          - ImageId
          - InstanceClass
          - KeyName
          - MyPublicIp

Resources:
  ComponentStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref ComponentTemplateURL
      Parameters:
        MyPublicIp: !Ref MyPublicIp
        VpcId: !Ref VpcId
        DefaultPublicSubnetCidr: !Ref DefaultPublicSubnetCidr
        PrivateSubnetCidr: !Ref PrivateSubnetCidr
      TimeoutInMinutes: 3

  EC2PrivateSubnet:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !FindInMap [InstanceClass, !Ref InstanceClass, InstanceClassName]
      ImageId: !Ref ImageId
      KeyName: !Ref KeyName
      SubnetId: !GetAtt ComponentStack.Outputs.PrivateSubnetId
      SecurityGroupIds:
        - !GetAtt ComponentStack.Outputs.SSHSGId
        - !GetAtt ComponentStack.Outputs.BastionHostSGId
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} - EC2 - PrivateSubnet"
  
  EC2PublicSubnet:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !FindInMap [InstanceClass, !Ref InstanceClass, InstanceClassName]
      ImageId: !Ref ImageId
      KeyName: !Ref KeyName 
      SubnetId: !Join [",", !Ref PublicSubnet]
      SecurityGroupIds:
        - !GetAtt ComponentStack.Outputs.SSHSGId
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} - EC2 - PublicSubnet"    


